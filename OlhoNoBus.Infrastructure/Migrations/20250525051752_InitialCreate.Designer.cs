// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OlhoNoBus.Infrastructure.Data;

#nullable disable

namespace OlhoNoBus.Infrastructure.Migrations
{
    [DbContext(typeof(OlhoNoBusDbContext))]
    [Migration("20250525051752_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OlhoNoBus.Core.Entities.BusLine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BusLine");
                });

            modelBuilder.Entity("OlhoNoBus.Core.Entities.BusStop", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BusLineId")
                        .HasColumnType("bigint");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BusLineId");

                    b.ToTable("BusStop");
                });

            modelBuilder.Entity("OlhoNoBus.Core.Entities.Vehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BusLineId")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BusLineId");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("OlhoNoBus.Core.Entities.VehiclePosition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<long?>("VehicleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehiclePosition");
                });

            modelBuilder.Entity("OlhoNoBus.Core.Entities.BusStop", b =>
                {
                    b.HasOne("OlhoNoBus.Core.Entities.BusLine", null)
                        .WithMany("BusStops")
                        .HasForeignKey("BusLineId");
                });

            modelBuilder.Entity("OlhoNoBus.Core.Entities.Vehicle", b =>
                {
                    b.HasOne("OlhoNoBus.Core.Entities.BusLine", "BusLine")
                        .WithMany()
                        .HasForeignKey("BusLineId");

                    b.Navigation("BusLine");
                });

            modelBuilder.Entity("OlhoNoBus.Core.Entities.VehiclePosition", b =>
                {
                    b.HasOne("OlhoNoBus.Core.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("OlhoNoBus.Core.Entities.BusLine", b =>
                {
                    b.Navigation("BusStops");
                });
#pragma warning restore 612, 618
        }
    }
}
